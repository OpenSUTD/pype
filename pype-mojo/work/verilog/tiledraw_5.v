/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module tiledraw_5 (
    input clk,
    input [9:0] horizontaloffset,
    input [8:0] verticaloffset,
    input [2:0] shape,
    input [2:0] orientation,
    output reg bittodraw
  );
  
  
  
  wire [1-1:0] M_hvsync_vga_h_sync;
  wire [1-1:0] M_hvsync_vga_v_sync;
  wire [1-1:0] M_hvsync_inDisplayArea;
  wire [11-1:0] M_hvsync_CounterX;
  wire [9-1:0] M_hvsync_CounterY;
  hvsync_generator_1 hvsync (
    .clk(clk),
    .vga_h_sync(M_hvsync_vga_h_sync),
    .vga_v_sync(M_hvsync_vga_v_sync),
    .inDisplayArea(M_hvsync_inDisplayArea),
    .CounterX(M_hvsync_CounterX),
    .CounterY(M_hvsync_CounterY)
  );
  wire [1-1:0] M_shape1_bitout;
  reg [10-1:0] M_shape1_horizontaloffset;
  reg [9-1:0] M_shape1_verticaloffset;
  reg [3-1:0] M_shape1_orientation;
  shape1draw_37 shape1 (
    .clk(clk),
    .horizontaloffset(M_shape1_horizontaloffset),
    .verticaloffset(M_shape1_verticaloffset),
    .orientation(M_shape1_orientation),
    .bitout(M_shape1_bitout)
  );
  wire [1-1:0] M_shape2_bitout;
  reg [10-1:0] M_shape2_horizontaloffset;
  reg [9-1:0] M_shape2_verticaloffset;
  reg [3-1:0] M_shape2_orientation;
  shape2draw_38 shape2 (
    .clk(clk),
    .horizontaloffset(M_shape2_horizontaloffset),
    .verticaloffset(M_shape2_verticaloffset),
    .orientation(M_shape2_orientation),
    .bitout(M_shape2_bitout)
  );
  
  reg [10:0] counterh;
  
  reg [8:0] counterv;
  
  always @* begin
    counterh = M_hvsync_CounterX;
    counterv = M_hvsync_CounterY;
    if (shape == 1'h0) begin
      M_shape1_horizontaloffset = horizontaloffset;
      M_shape1_verticaloffset = verticaloffset;
      M_shape1_orientation = orientation;
      M_shape2_horizontaloffset = 1'h0;
      M_shape2_verticaloffset = 1'h0;
      M_shape2_orientation = 1'h0;
      bittodraw = M_shape1_bitout;
    end else begin
      if (shape == 1'h1) begin
        M_shape1_horizontaloffset = 1'h0;
        M_shape1_verticaloffset = 1'h0;
        M_shape1_orientation = 1'h0;
        M_shape2_horizontaloffset = horizontaloffset;
        M_shape2_verticaloffset = verticaloffset;
        M_shape2_orientation = orientation;
        bittodraw = M_shape2_bitout;
      end else begin
        M_shape1_horizontaloffset = horizontaloffset;
        M_shape1_verticaloffset = verticaloffset;
        M_shape1_orientation = orientation;
        M_shape2_horizontaloffset = 1'h0;
        M_shape2_verticaloffset = 1'h0;
        M_shape2_orientation = 1'h0;
        bittodraw = M_shape1_bitout;
      end
    end
  end
endmodule
